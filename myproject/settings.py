"""
Django settings for myproject project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
import json

# only uncomment when in production

#with open('/etc/config.json') as config_file: 
#    config = json.load(config_file)
 
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = 'django-insecure-gd&lety0dbz8ltv%+x!r(h9l0lu0!e791o&68kf)o4z6kq(*c('
#SECRET_KEY = config['SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []  # server address
# ALLOWED_HOSTS = ['www.mydomainname.com', '192.168.1.1']


# Application definition

INSTALLED_APPS = [
    'Blog.apps.BlogConfig',
    'Users.apps.UsersConfig',
    'Portfolio.apps.PortfolioConfig',
    'crispy_forms',
    'Contact',
    'Resume',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crispy_bootstrap4',
    'storages',
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'myproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'myproject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

# static dir is handled differently in production
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

STATIC_URL = 'static/'

# base_fullpath_directory/media/profile_pics/user.jpg
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEIDA_URL = '/media/'  # handle access by browser url

CRISPY_TEMPLATE_PACK = 'bootstrap4'


# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# redirect to user profile after login #'Blog:blog-home'   #redirect to home
LOGIN_REDIRECT_URL = 'profile'
# redirect for login page when someone try to access profile/ without logging in
LOGIN_URL = 'login'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True


EMAIL_HOST_USER = os.environ.get('EMAIL_USER')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_PASSWORD')

# LOADING var from config.json in production 

#EMAIL_HOST_USER = config.get('EMAIL_USER')
#EMAIL_HOST_PASSWORD = config.get('EMAIL_PASSWORD')


# environ var for s3 bucket

AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = os.environ.get('AWS_STORAGE_BUCKET_NAME')

#AWS_ACCESS_KEY_ID = config.get('AWS_ACCESS_KEY_ID')
#AWS_SECRET_ACCESS_KEY = config.get('AWS_SECRET_ACCESS_KEY')
#AWS_STORAGE_BUCKET_NAME = config.get('AWS_STORAGE_BUCKET_NAME')


# don't overwrite file when user upload the file with same name
AWS_S3_FILE_OVERWRITE = False
AWS_DEFAULT_ACL = None  # version error

DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

# contact form

DEFAULT_FROM_EMAIL = "winkyawphyo78@gmail.com"
EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"
